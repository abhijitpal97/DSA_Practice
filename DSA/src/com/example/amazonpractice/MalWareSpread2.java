package com.example.amazonpractice;
import java.util.*;

// https://www.codingninjas.com/studio/problems/minimize-malware-spread-ii_1376659

public class MalWareSpread2 {
	static int count = 0;
	public static int minMalwareSpread(ArrayList<ArrayList<Integer>>  graph,
			ArrayList<Integer>  initial) {
		// Write your code here
		Set<Integer> infected = new HashSet<>();

		for(int i=0;i<initial.size();i++) infected.add(initial.get(i));

		int ans = 0;
		int min = Integer.MAX_VALUE;

		for(Integer curr : initial)
		{
			infected.remove(curr);

			count  = 0;

			Set<Integer> visited = new HashSet<>();
			visited.add(curr);

			for(int v :infected)
			{
				if(v != curr)
				{
					dfs(graph , visited , v);
				}
			}

			if(count<min || 
					(count == min && curr<ans))
			{
				min = count;
				ans = curr;
			}
			infected.add(curr);
		}

		return ans;
	}

	static void dfs(ArrayList<ArrayList<Integer>>  graph , Set<Integer> visited , int src)
	{
		if(visited.contains(src)) return ;

		visited.add(src);
		count++;

		for(int i=0;i<graph.get(src).size(); i++)
		{
			int x = graph.get(src).get(i);
			if(x == 1 && i != src) dfs(graph , visited , i);
		}
	}
}